# coding: utf-8




# 既成のモジュールをインポートする.
import os
import sys
import re
import regex
import emoji
import calendar
import random


# 日本語の常用漢字を宣言する.
JYOUYOU_KANJI = """亜哀挨愛曖悪握圧扱宛嵐安案暗以衣位囲医依委威為畏胃尉異移萎偉椅彙意違維慰遺緯域育
                   一壱逸茨芋引印因咽姻員院淫陰飲隠韻右宇羽雨唄鬱畝浦運雲永泳英映栄営詠影鋭衛易疫益
                   液駅悦越謁閲円延沿炎怨宴媛援園煙猿遠鉛塩演縁艶汚王凹央応往押旺欧殴桜翁奥横岡屋億
                   憶臆虞乙俺卸音恩温穏下化火加可仮何花佳価果河苛科架夏家荷華菓貨渦過嫁暇禍靴寡歌箇
                   稼課蚊牙瓦我画芽賀雅餓介回灰会快戒改怪拐悔海界皆械絵開階塊楷解潰壊懐諧貝外劾害崖
                   涯街慨蓋該概骸垣柿各角拡革格核殻郭覚較隔閣確獲嚇穫学岳楽額顎掛潟括活喝渇割葛滑褐
                   轄且株釜鎌刈干刊甘汗缶完肝官冠巻看陥乾勘患貫寒喚堪換敢棺款間閑勧寛幹感漢慣管関歓
                   監緩憾還館環簡観韓艦鑑丸含岸岩玩眼頑顔願企伎危机気岐希忌汽奇祈季紀軌既記起飢鬼帰
                   基寄規亀喜幾揮期棋貴棄毀旗器畿輝機騎技宜偽欺義疑儀戯擬犠議菊吉喫詰却客脚逆虐九久
                   及弓丘旧休吸朽臼求究泣急級糾宮救球給嗅窮牛去巨居拒拠挙虚許距魚御漁凶共叫狂京享供
                   協況峡挟狭恐恭胸脅強教郷境橋矯鏡競響驚仰暁業凝曲局極玉巾斤均近金菌勤琴筋僅禁緊錦
                   謹襟吟銀区句苦駆具惧愚空偶遇隅串屈掘窟熊繰君訓勲薫軍郡群兄刑形系径茎係型契計恵啓
                   掲渓経蛍敬景軽傾携継詣慶憬稽憩警鶏芸迎鯨隙劇撃激桁欠穴血決結傑潔月犬件見券肩建研
                   県倹兼剣拳軒健険圏堅検嫌献絹遣権憲賢謙鍵繭顕験懸元幻玄言弦限原現舷減源厳己戸古呼
                   固股虎孤弧故枯個庫湖雇誇鼓錮顧五互午呉後娯悟碁語誤護口工公勾孔功巧広甲交光向后好
                   江考行坑孝抗攻更効幸拘肯侯厚恒洪皇紅荒郊香候校耕航貢降高康控梗黄喉慌港硬絞項溝鉱
                   構綱酵稿興衡鋼講購乞号合拷剛傲豪克告谷刻国黒穀酷獄骨駒込頃今困昆恨根婚混痕紺魂墾
                   懇左佐沙査砂唆差詐鎖座挫才再災妻采砕宰栽彩採済祭斎細菜最裁債催塞歳載際埼在材剤財
                   罪崎作削昨柵索策酢搾錯咲冊札刷刹拶殺察撮擦雑皿三山参桟蚕惨産傘散算酸賛残斬暫士子
                   支止氏仕史司四市矢旨死糸至伺志私使刺始姉枝祉肢姿思指施師恣紙脂視紫詞歯嗣試詩資飼
                   誌雌摯賜諮示字寺次耳自似児事侍治持時滋慈辞磁餌璽鹿式識軸七𠮟失室疾執湿嫉漆質実芝
                   写社車舎者射捨赦斜煮遮謝邪蛇尺借酌釈爵若弱寂手主守朱取狩首殊珠酒腫種趣寿受呪授需
                   儒樹収囚州舟秀周宗拾秋臭修袖終羞習週就衆集愁酬醜蹴襲十汁充住柔重従渋銃獣縦叔祝宿
                   淑粛縮塾熟出述術俊春瞬旬巡盾准殉純循順準潤遵処初所書庶暑署緒諸女如助序叙徐除小升
                   少召匠床抄肖尚招承昇松沼昭宵将消症祥称笑唱商渉章紹訟勝掌晶焼焦硝粧詔証象傷奨照詳
                   彰障憧衝賞償礁鐘上丈冗条状乗城浄剰常情場畳蒸縄壌嬢錠譲醸色拭食植殖飾触嘱織職辱尻
                   心申伸臣芯身辛侵信津神唇娠振浸真針深紳進森診寝慎新審震薪親人刃仁尽迅甚陣尋腎須図
                   水吹垂炊帥粋衰推酔遂睡穂随髄枢崇数据杉裾寸瀬是井世正生成西声制姓征性青斉政星牲省
                   凄逝清盛婿晴勢聖誠精製誓静請整醒税夕斥石赤昔析席脊隻惜戚責跡積績籍切折拙窃接設雪
                   摂節説舌絶千川仙占先宣専泉浅洗染扇栓旋船戦煎羨腺詮践箋銭潜線遷選薦繊鮮全前善然禅
                   漸膳繕狙阻祖租素措粗組疎訴塑遡礎双壮早争走奏相荘草送倉捜挿桑巣掃曹曽爽窓創喪痩葬
                   装僧想層総遭槽踪操燥霜騒藻造像増憎蔵贈臓即束足促則息捉速側測俗族属賊続卒率存村孫
                   尊損遜他多汰打妥唾堕惰駄太対体耐待怠胎退帯泰堆袋逮替貸隊滞態戴大代台第題滝宅択沢
                   卓拓託濯諾濁但達脱奪棚誰丹旦担単炭胆探淡短嘆端綻誕鍛団男段断弾暖談壇地池知値恥致
                   遅痴稚置緻竹畜逐蓄築秩窒茶着嫡中仲虫沖宙忠抽注昼柱衷酎鋳駐著貯丁弔庁兆町長挑帳張
                   彫眺釣頂鳥朝貼超腸跳徴嘲潮澄調聴懲直勅捗沈珍朕陳賃鎮追椎墜通痛塚漬坪爪鶴低呈廷弟
                   定底抵邸亭貞帝訂庭逓停偵堤提程艇締諦泥的笛摘滴適敵溺迭哲鉄徹撤天典店点展添転塡田
                   伝殿電斗吐妬徒途都渡塗賭土奴努度怒刀冬灯当投豆東到逃倒凍唐島桃討透党悼盗陶塔搭棟
                   湯痘登答等筒統稲踏糖頭謄藤闘騰同洞胴動堂童道働銅導瞳峠匿特得督徳篤毒独読栃凸突届
                   屯豚頓貪鈍曇丼那奈内梨謎鍋南軟難二尼弐匂肉虹日入乳尿任妊忍認寧熱年念捻粘燃悩納能
                   脳農濃把波派破覇馬婆罵拝杯背肺俳配排敗廃輩売倍梅培陪媒買賠白伯拍泊迫剝舶博薄麦漠
                   縛爆箱箸畑肌八鉢発髪伐抜罰閥反半氾犯帆汎伴判坂阪板版班畔般販斑飯搬煩頒範繁藩晩番
                   蛮盤比皮妃否批彼披肥非卑飛疲秘被悲扉費碑罷避尾眉美備微鼻膝肘匹必泌筆姫百氷表俵票
                   評漂標苗秒病描猫品浜貧賓頻敏瓶不夫父付布扶府怖阜附訃負赴浮婦符富普腐敷膚賦譜侮武
                   部舞封風伏服副幅復福腹複覆払沸仏物粉紛雰噴墳憤奮分文聞丙平兵併並柄陛閉塀幣弊蔽餅
                   米壁璧癖別蔑片辺返変偏遍編弁便勉歩保哺捕補舗母募墓慕暮簿方包芳邦奉宝抱放法泡胞俸
                   倣峰砲崩訪報蜂豊飽褒縫亡乏忙坊妨忘防房肪某冒剖紡望傍帽棒貿貌暴膨謀頰北木朴牧睦僕
                   墨撲没勃堀本奔翻凡盆麻摩磨魔毎妹枚昧埋幕膜枕又末抹万満慢漫未味魅岬密蜜脈妙民眠矛
                   務無夢霧娘名命明迷冥盟銘鳴滅免面綿麺茂模毛妄盲耗猛網目黙門紋問冶夜野弥厄役約訳薬
                   躍闇由油喩愉諭輸癒唯友有勇幽悠郵湧猶裕遊雄誘憂融優与予余誉預幼用羊妖洋要容庸揚揺
                   葉陽溶腰様瘍踊窯養擁謡曜抑沃浴欲翌翼拉裸羅来雷頼絡落酪辣乱卵覧濫藍欄吏利里理痢裏
                   履璃離陸立律慄略柳流留竜粒隆硫侶旅虜慮了両良料涼猟陵量僚領寮療瞭糧力緑林厘倫輪隣
                   臨瑠涙累塁類令礼冷励戻例鈴零霊隷齢麗暦歴列劣烈裂恋連廉練錬呂炉賂路露老労弄郎朗浪
                   廊楼漏籠六録麓論和話賄脇惑枠湾腕"""

# 日本語の第一水準の漢字を宣言する.
DAIICHI_SUIJYUN = """一丁七万丈三上下不与丑且世丘丙丞両並中串丸丹主乃久之乍乎乏乗乙九乞也乱乳乾亀了予
                     争事二云互五井亘亙些亜亡交亥亦亨享京亭亮人什仁仇今介仏仔仕他付仙代令以仮仰仲件任
                     企伊伍伎伏伐休会伝伯伴伶伸伺似伽佃但位低住佐佑体何余作佳併佼使侃例侍供依侠価侭侮
                     侯侵侶便係促俄俊俗保信俣修俳俵俸俺倉個倍倒倖候借倣値倦倫倭倶倹偉偏停健偲側偵偶偽
                     傍傑傘備催傭債傷傾僅働像僑僕僚僧僻儀億儒償優儲允元兄充兆兇先光克免兎児党兜入全八
                     公六共兵其具典兼内円冊再冒冗写冠冥冨冬冴冶冷凄准凋凌凍凝凡処凧凪凱凶凸凹出函刀刃
                     分切刈刊刑列初判別利到制刷券刺刻剃則削前剖剛剣剤剥副剰割創劃劇劉力功加劣助努劫励
                     労効劾勃勅勇勉動勘務勝募勢勤勧勲勺勾勿匁匂包化北匙匝匠匡匪匹区医匿十千升午半卑卒
                     卓協南単博卜占卦卯印危即却卵卸卿厄厘厚原厨厩厭厳去参又叉及友双反収叔取受叙叛叡叢
                     口古句叩只叫召可台叱史右叶号司吃各合吉吊吋同名后吏吐向君吟吠否含吸吹吻吾呂呆呈呉
                     告呑周呪味呼命咋和咲咳咽哀品哉員哨哩哲唄唆唇唐唖唯唱唾啄商問啓善喉喋喚喜喝喧喪喫
                     喬喰営嗣嘆嘉嘗嘘嘩嘱噂噌噛器噴噸噺嚇嚢囚四回因団困囲図固国圃圏園土圧在圭地坂均坊
                     坐坑坤坦坪垂型垢垣埋城埜域埠埴執培基埼堀堂堅堆堕堤堪堰報場堵堺塀塁塊塑塔塗塘塙塚
                     塞塩填塵塾境墓増墜墨墳墾壁壇壊壌壕士壬壮声壱売壷変夏夕外夙多夜夢大天太夫央失夷奄
                     奇奈奉奏契奔套奥奨奪奮女奴好如妃妄妊妓妖妙妥妨妬妹妻妾姉始姐姑姓委姥姦姪姫姶姻姿
                     威娃娘娠娩娯娼婁婆婚婦婿媒媛嫁嫉嫌嫡嬉嬢嬬嬰子孔字存孜孝孟季孤学孫宅宇守安宋完宍
                     宏宕宗官宙定宛宜宝実客宣室宥宮宰害宴宵家容宿寂寄寅密富寒寓寛寝察寡寧審寮寵寸寺対
                     寿封専射将尉尊尋導小少尖尚尤尭就尺尻尼尽尾尿局居屈届屋屍屑展属屠屡層履屯山岐岡岨
                     岩岬岱岳岸峠峡峨峯峰島峻崇崎崖崩嵐嵩嵯嶋嶺巌川州巡巣工左巧巨差己巳巴巷巻巽巾市布
                     帆希帖帝帥師席帯帰帳常帽幅幌幕幡幣干平年幸幹幻幼幽幾庁広庄庇床序底庖店庚府度座庫
                     庭庵庶康庸廃廉廊廓廟廠延廷建廻廼廿弁弄弊式弐弓弔引弗弘弛弟弥弦弧弱張強弼弾彊当形
                     彦彩彪彫彬彰影役彼往征径待律後徐徒従得御復循微徳徴徹徽心必忌忍志忘忙応忠快念忽怒
                     怖怜思怠急性怨怪怯恋恐恒恕恢恥恨恩恭息恰恵悉悌悔悟悠患悦悩悪悲悶悼情惇惑惚惜惟惣
                     惨惰想惹愁愈愉意愚愛感慈態慌慎慕慢慣慧慨慮慰慶慾憂憎憐憤憧憩憲憶憾懇懐懲懸戊戎成
                     我戒或戚戟戦戯戴戸戻房所扇扉手才打払托扮扱扶批承技抄把抑投抗折抜択披抱抵抹押抽担
                     拍拐拒拓拘拙招拝拠拡括拭拳拶拷拾持指按挑挙挟挨挫振挺挽挿捉捌捕捗捜捧捨据捲捷捺捻
                     掃授掌排掘掛掠採探接控推掩措掬掲掴掻揃描提揖揚換握揮援揺損搬搭携搾摂摘摩摸摺撃撒
                     撚撞撤撫播撮撰撲撹擁操擢擦擬擾支改攻放政故敏救敗教敢散敦敬数整敵敷文斉斌斎斐斑斗
                     料斜斡斤斥斧斬断斯新方於施旅旋族旗既日旦旧旨早旬旭旺昂昆昇昌明昏易昔星映春昧昨昭
                     是昼時晃晋晒晦晩普景晴晶智暁暇暑暖暗暢暦暫暮暴曇曙曜曝曲曳更書曹曽曾替最月有朋服
                     朔朕朗望朝期木未末本札朱朴机朽杉李杏材村杓杖杜束条杢来杭杯東杵杷松板枇析枕林枚果
                     枝枠枢枯架柁柄柊柏某柑染柔柘柚柱柳柴柵査柾柿栂栃栄栓栖栗校栢株栴核根格栽桁桂桃案
                     桐桑桓桔桜桝桟桧桶梁梅梓梗梢梧梨梯械梱梶梼棄棉棋棒棚棟森棲棺椀椅椋植椎椙椛検椴椿
                     楊楓楕楚楠楢業楯楳極楼楽概榊榎榔榛構槌槍様槙槻槽樋樗標樟模権横樫樵樹樺樽橋橘機橡
                     橿檀檎櫓櫛櫨欄欝欠次欣欧欲欺欽款歌歎歓止正此武歩歪歯歳歴死殆殉殊残殖殴段殺殻殿毅
                     母毎毒比毘毛氏民気水氷永氾汀汁求汎汐汗汚汝江池汰汲決汽沃沈沌沓沖沙没沢沫河沸油治
                     沼沿況泉泊泌法泡波泣泥注泰泳洋洗洛洞津洩洪洲活派流浄浅浜浦浩浪浬浮浴海浸消涌涙涛
                     涜涯液涼淀淋淑淘淡淫深淳淵混添清渇済渉渋渓渚減渠渡渥渦温測港湊湖湘湛湧湯湾湿満溌
                     源準溜溝溢溶溺滅滋滑滝滞滴漁漂漆漉漏演漕漠漢漣漫漬漸潅潔潜潟潤潮潰澄澗澱激濁濃濠
                     濡濫濯瀕瀞瀦瀧瀬灘火灯灰灸灼災炉炊炎炭点為烈烏烹焔焚無焦然焼煉煎煙煤照煩煮煽熊熔
                     熟熱燃燈燐燕燥燦燭爆爪爵父爺爽爾片版牌牒牙牛牝牟牡牢牧物牲特牽犀犠犬犯状狂狐狗狙
                     狛狩独狭狸狼狽猛猟猪猫献猶猷猿獄獅獣獲玄率玉王玖玩玲珂珊珍珠珪班現球理琉琢琳琴琵
                     琶瑚瑛瑞瑠瑳璃環璽瓜瓢瓦瓶甑甘甚甜生産甥用甫田由甲申男町画界畏畑畔留畜畝畠畢略畦
                     番異畳畷畿疋疎疏疑疫疲疹疾病症痔痕痘痛痢痩痴療癌癒癖発登白百的皆皇皐皮皿盃盆盈益
                     盗盛盟監盤目盲直相盾省眉看県真眠眺眼着睡督睦瞥瞬瞭瞳矛矢知矧矩短矯石砂研砕砥砦砧
                     砲破砺砿硝硫硬硯硲碁碇碍碑碓碕碗碧碩確磁磐磨磯礁礎示礼社祁祇祈祉祐祖祝神祢祥票祭
                     祷禁禄禅禍禎福禦禰禽禾禿秀私秋科秒秘租秤秦秩称移稀程税稔稗稚稜種稲稼稽稿穀穂穆積
                     穎穏穐穣穫穴究空穿突窃窄窒窓窟窪窮窯窺竃立竜章竣童竪端競竹竺竿笈笑笛笠笥符第笹筆
                     筈等筋筏筑筒答策箆箇箔箕算管箪箭箱箸節範篇築篠篤篭簡簸簾簿籍米籾粁粂粉粋粍粒粕粗
                     粘粛粟粥粧精糊糎糖糞糟糠糧糸系糾紀約紅紋納紐純紗紘紙級紛素紡索紫紬累細紳紹紺終絃
                     組経結絞絡絢給統絵絶絹継続綜綬維綱網綴綻綾綿緊緋総緑緒線締編緩緬緯練縁縄縛縞縦縫
                     縮績繁繊繋繍織繕繭繰纂纏缶罪罫置罰署罵罷羅羊美群羨義羽翁翌習翠翫翰翻翼耀老考者而
                     耐耕耗耳耶耽聖聞聡聯聴職聾肇肉肋肌肖肘肝股肢肥肩肪肯肱育肴肺胃胆背胎胞胡胤胴胸能
                     脂脅脆脇脈脊脚脱脳脹腎腐腔腕腫腰腸腹腺腿膏膚膜膝膨膳膿臆臓臣臥臨自臭至致臼興舌舎
                     舗舘舛舜舞舟航般舵舶舷船艇艦艮良色艶芋芙芝芥芦芭芯花芳芸芹芽苅苑苓苔苗苛若苦苧苫
                     英茂茄茅茎茜茨茶茸草荊荏荒荘荷荻莞莫莱菅菊菌菓菖菜菟菩華菰菱萄萌萎萩萱落葉葎著葛
                     葡董葦葬葱葵葺蒋蒐蒔蒙蒜蒲蒸蒼蓄蓉蓋蓑蓬蓮蔀蔑蔓蔚蔦蔭蔵蔽蕃蕉蕊蕎蕗蕨蕩蕪薄薗薙
                     薦薩薪薫薬薮薯藁藍藤藩藷藻蘇蘭虎虐虚虜虞虫虹虻蚊蚕蚤蛇蛋蛍蛎蛙蛤蛭蛮蛸蛾蜂蜘蜜蝉
                     蝋蝕蝦蝶蝿融螺蟹蟻血衆行術街衛衝衡衣表衰衷衿袈袋袖被袴袷裁裂装裏裕補裟裡裳裸製裾
                     複褐褒襖襟襲西要覆覇見規視覗覚覧親観角解触言訂計訊討訓託記訟訣訪設許訳訴診註証詐
                     詑詔評詞詠詣試詩詫詮詰話該詳誇誉誌認誓誕誘語誠誤説読誰課誹誼調談請諌諏諒論諜諦諭
                     諮諸諺諾謀謁謂謄謎謙講謝謡謬謹識譜警議譲護讃讐谷豆豊豚象豪豹貌貝貞負財貢貧貨販貫
                     責貯貰貴買貸費貼貿賀賂賃賄資賊賎賑賓賛賜賞賠賢賦質賭購贈贋赤赦赫走赴起超越趣趨足
                     距跡跨路跳践踊踏蹄蹟蹴躍身躯車軌軍軒軟転軸軽較載輔輝輩輪輯輸輿轄轍轟轡辛辞辰辱農
                     辺辻込辿迂迄迅迎近返迦迩迫迭述迷追退送逃逆透逐逓途逗這通逝速造逢連逮週進逸逼遁遂
                     遅遇遊運遍過道達違遜遠遡遣遥適遭遮遵遷選遺遼避還邑那邦邪邸郁郊郎郡部郭郵郷都鄭酉
                     酋酌配酎酒酔酢酪酬酵酷酸醇醍醐醒醗醜醤醸釆采釈里重野量金釘釜針釣釦釧鈍鈎鈴鈷鉄鉛
                     鉢鉦鉱鉾銀銃銅銑銘銚銭鋒鋤鋪鋭鋲鋳鋸鋼錆錐錘錠錦錨錫錬錯録鍋鍍鍔鍛鍬鍵鍾鎌鎖鎗鎚
                     鎧鎮鏑鏡鐘鐙鐸鑑鑓長門閃閉開閏閑間関閣閤閥閲闇闘阜阪防阻阿陀附降限陛院陣除陥陪陰
                     陳陵陶陸険陽隅隆隈隊階随隔隙際障隠隣隷隻隼雀雁雄雅集雇雌雑雛離難雨雪雫雰雲零雷電
                     需震霊霜霞霧露青靖静非面革靭靴鞄鞍鞘鞠鞭韓韮音韻響頁頂頃項順須預頑頒頓頗領頚頬頭
                     頴頻頼題額顎顔顕願顛類顧風飛食飢飯飲飴飼飽飾餅養餌餐餓館饗首香馨馬馳馴駁駄駅駆駈
                     駐駒駕駿騎騒験騨騰驚骨骸髄高髪髭鬼魁魂魅魔魚魯鮎鮒鮪鮫鮭鮮鯉鯖鯛鯨鯵鰍鰐鰭鰯鰹鰻
                     鱈鱒鱗鳥鳩鳳鳴鳶鴇鴎鴛鴨鴫鴬鴻鵜鵠鵡鵬鶏鶴鷲鷹鷺鹸鹿麓麗麟麦麹麺麻麿黄黍黒黙黛鼎
                     鼓鼠鼻齢龍"""

# 日本語の第二水準の漢字を宣言する.
DAINI_SUIJYUN = """丐丕丗个丱丶丼丿乂乕乖乘乢亂亅亊于亞亟亠亢亰亳亶仂仄仆仍从仗仞仟仭价伉伜估佇佗佚
                   佛佝佞佩佯佰佶佻來侈侏侑侖侘侫俎俐俑俔俘俚俛俟俤俥俯俶俾倅倆倏們倔倚倡倥倨倩倪倬
                   偃假偈偐偕偖做偬偸傀傅傚傲傳傴僂僉僊僖僞僣僥僭僮僵價儁儂儉儔儕儖儘儚儡儷儺儻儼儿
                   兀兌兒兔兢兩兪兮冀冂冉册冏冐冑冓冕冖冢冤冦冩冪冫冰冱冲决况冽凅凉凖凛凜几凩凭凰凵
                   凾刄刋刎刔刧刪刮刳刹剄剋剌剏剔剞剩剪剱剳剴剽剿劈劍劑劒劔劬劭劵劼勁勍勒勗勞勠勣勦
                   勳勵勸勹匆匈匍匏匐匕匚匣匯匱匳匸區卅卆卉卍卞卩卮卷卻厂厖厠厥厦厮厰厶參叟叨叭叮叺
                   吁吝吩听吭吮吶吼吽呀呎呟呰呱呵呶呷呻咀咄咆咎咏咐咒咢咤咥咨咫咬咯咸咼咾哂哄哇哈哘
                   哢哥哦哭哮哺哽唏唔售唳唸唹啀啅啌啖啗啜啝啣啻啼啾喀喃喇喊喘喙喞喟喨喩單嗄嗅嗇嗔嗚
                   嗜嗟嗤嗷嗹嗽嗾嘔嘖嘛嘯嘲嘴嘶嘸噎噐噤噪噫噬嚀嚆嚊嚏嚔嚠嚥嚮嚴嚶嚼囀囁囂囃囈囎囑囓
                   囗囘囮囹囿圀圄圈圉國圍圓圖團圜圦圷圸圻址坎坏坡坩坿垈垉垓垠垤垪垰垳埀埃埆埒埓埔埖
                   埣堊堋堙堝堡堯堽塋塒塢塰塲塹墅墟墫墮墸墹墺墻壅壑壓壗壘壙壜壞壟壤壥壯壹壺壻壼壽夂
                   夊夐夘夛夥夬夭夲夸夾奎奐奕奘奚奠奢奧奩奬奸妁妍妛妝妣妲姆姙姚姜姨娉娑娚娜娟娥娵娶
                   婀婉婢婪婬媚媼媽媾嫂嫋嫐嫖嫗嫣嫦嫩嫺嫻嬋嬌嬖嬪嬲嬶嬾孀孃孅孑孕孚孛孥孩孰孱孳孵學
                   孺宀它宦宸寃寇寉寐寔寞寢寤寥實寨寫寰寳寶尅將專對尓尠尢尨尸尹屁屆屎屏屐屓屬屮屶屹
                   岌岑岔岫岶岷岻岼岾峅峇峙峩峪峭峺峽崋崑崔崕崗崘崙崚崛崟崢嵋嵌嵎嵒嵜嵬嵳嵶嶂嶄嶇嶌
                   嶐嶝嶢嶬嶮嶷嶼嶽巉巍巒巓巖巛巫已巵帋帑帙帚帛帶帷幀幃幄幇幎幔幗幟幢幤幵并幺广庠廁
                   廂廈廏廐廖廚廛廝廡廢廣廨廩廬廰廱廳廴廸廾弃弉弋弌弍弑弖弩弭弯弸彁彈彌彎彑彖彗彙彜
                   彝彡彭彳彷彿徂徃徇很徊徑徘徙從徠徨徭徼忖忝忤忰忱忸忻忿怎怏怐怕怙怛怡怦怩怫怱怺恁
                   恂恃恆恊恍恙恚恟恠恣恤恪恫恬恷悁悃悄悋悍悒悖悗悚悛悧悳悴悵悸悽惆惓惘惠惡惧惱惴惶
                   惷惺惻愀愃愆愍愎愕愡愧愨愬愴愼愽愾愿慂慄慇慊慍慓慘慙慚慝慟慥慫慯慱慳慴慵慷憇憊憑
                   憔憖憙憚憫憬憮憺懃懆懈應懊懋懌懍懣懦懴懶懷懺懼懽懾懿戀戈戉戌戍戔戛戝戞戡截戮戰戲
                   戳扁扈扎扛扞扠扣扨扼找抂抃抉抒抓抔抖抛抬抻拂拆拇拈拉拊拌拏拑拔拗拜拮拯拱拵拿挂挈
                   挌挧挾捍捏捐捩捫捶掀掉掎掏掖掟掣掫掵掾揀揄揆揉插揣揩揶搆搏搓搖搗搜搦搨搴搶摎摧摯
                   摶撈撓撕撥撩撻撼擂擅擇擒擔擘據擠擡擣擧擯擱擲擴擶擺擽攀攅攘攜攝攣攤攪攫攬攴攵收攷
                   攸效敍敕敖敘敝敞敲數斂斃斈斛斟斫斷旁旃旄旆旌旒旙旛无旡旱旻昃昊昜昴昵昶昿晁晄晉晏
                   晝晞晟晢晤晧晨晰暃暄暈暉暎暘暝暸暹暼暾曁曄曉曖曚曠曦曩曰曵曷曼會朏朖朞朦朧朮朶朷
                   朸朿杁杆杙杞杠杣杤杪杰杲杳杼枅枉枋枌枡枦枩枳枴枷枸枹柆柎柝柞柢柤柧柩柬柮柯栞栩栫
                   栲桀框桍桎桙档桴桷桾桿梃梍梏梔梛條梟梠梦梭梳梵梹梺棆棊棍棔棕棗棘棠棡棣棧棯棹椁椄
                   椈椌椏椒椚椡椢椣椥椦椨椪椰椶椹椽楔楙楜楝楞楡楪楫楮楴楷楸楹楾榁榑榕榜榠榧榮榱榲榴
                   榻榾榿槁槃槇槊槎槐槓槝槞槧槨槫槭槲槹槿樂樅樊樌樒樓樔樛樞樢樣樮樶樸橄橇橈橙橢橦橲
                   橸檄檍檐檗檜檠檢檣檪檬檮檳檸檻櫁櫂櫃櫑櫚櫞櫟櫪櫺櫻欅權欒欖欟欷欸欹歃歇歉歐歔歙歛
                   歟歡歸歹歿殀殃殄殍殕殘殞殤殪殫殯殱殲殳殷殼毀毆毋毓毟毫毬毯毳氈氓气氛氣氤汕汞汢汨
                   汪汳汾沁沂沍沐沒沚沛沮沱沺沽沾泄泅泓泗泙泛泝泪泯泱洌洒洙洟洫洳洵洶洸洽浙浚浣浤浹
                   涅涎涓涕涵涸淅淆淇淌淒淕淙淞淤淦淨淪淬淮淹淺渊渕渙渝渟渣渤渫渭渮游渺渾湃湍湎湟湫
                   湮湲湶溂溏溘溟溥溪溯溲溷溽滂滄滉滌滓滔滕滬滯滲滷滸滾滿漑漓漱漲漾漿潁潘潛潦潭潯潴
                   潸潺潼澀澁澂澆澎澑澡澣澤澪澳澹濂濆濔濕濘濛濟濤濬濮濱濳濶濺濾瀁瀉瀋瀏瀑瀘瀚瀛瀝瀟
                   瀰瀲瀾灌灑灣炒炙炬炮炯炳炸烋烙烝烟烱烽焉焙焜煌煕煖煢煥煦煬熄熈熏熕熙熨熬熹熾燉燎
                   燒燔燗營燠燧燬燮燵燹燻燼燿爍爐爛爨爬爭爰爲爻爼爿牀牆牋牘牴牾犁犂犇犒犖犢犧犲犹狃
                   狄狆狎狒狠狡狢狷狹猊猖猗猜猝猥猩猯猴猾獎獏獗獨獪獰獵獸獺獻玳玻珀珈珎珞珥珮珱珸琅
                   琥琲琺琿瑁瑕瑙瑜瑟瑣瑤瑩瑪瑯瑰瑶瑾璋璞璢璧瓊瓏瓔瓠瓣瓧瓩瓮瓰瓱瓲瓷瓸甃甄甅甌甍甎
                   甓甕甞甦甬甸甼畄畆畉畊畋畍畚畛畤畧畩畫畭畴當畸疂疆疇疉疊疔疚疝疣疥疱疳疵疸疼疽痂
                   痃痊痍痒痙痞痣痰痲痳痺痼痾痿瘁瘉瘋瘍瘟瘠瘡瘢瘤瘧瘰瘴瘻癆癇癈癘癜癡癢癧癨癩癪癬癰
                   癲癶癸發皀皃皈皋皎皓皖皙皚皰皴皷皸皹皺盂盍盒盖盜盞盡盥盧盪盻眄眇眈眛眞眤眥眦眩眷
                   眸睇睚睛睥睨睫睹睾睿瞋瞎瞑瞞瞠瞰瞶瞹瞻瞼瞽瞿矇矍矗矚矜矣矮矼砌砒砠硅硴硼碆碌碎碚
                   碣碪碯碵碼碾磅磆磊磋磑磔磚磧磬磴磽礇礑礒礙礦礪礫礬祀祓祕祗祚祟祠祺祿禀禊禝禧禪禮
                   禳禹禺秉秕秡秣秧秬稈稍稘稙稟稠稱稷稻稾穃穉穗穡穢穩穰穹穽窈窕窖窗窘窩窰窶窿竄竅竇
                   竈竊竍竏竒竓竕站竚竝竟竡竢竦竭竰竸笂笄笆笊笋笏笘笙笞笨笳笵笶筅筌筍筐筝筥筧筬筮筰
                   筱筴筵筺箋箍箏箒箘箙箚箜箝箟箴篁篆篋篌篏篝篥篦篩篳篶篷簀簇簍簑簒簓簔簗簟簣簧簪簫
                   簷簽籀籃籌籏籐籔籖籘籟籠籤籥籬籵粃粐粡粢粤粨粫粭粮粱粲粳粹粽糀糂糅糒糘糜糢糯糲糴
                   糶糺紂紆紊紕紜紮紲紵紿絅絆絋絎絏絖絛絣絨絮絲絳絽綉綏經綛綟綢綣綫綮綯綰綵綸綺綽緇
                   緕緘緜緝緞緡緤緲緻縅縉縊縋縒縟縡縢縣縱縲縵縷縹縺縻總繃繆繖繙繚繝繞繦繧繩繪繹繻繼
                   繽繿纃纈纉續纎纐纒纓纔纖纛纜缸缺罅罌罍罎罐网罔罕罘罟罠罧罨罩罸罹羂羃羆羇羈羌羔羚
                   羝羞羣羮羯羲羶羸羹翅翆翊翔翕翡翦翩翳翹耄耆耋耒耘耙耜耡耨耻耿聆聊聒聘聚聟聢聨聰聲
                   聳聶聹聽聿肄肅肆肓肚肛肬肭胄胖胙胚胛胝胥胯胱胼脉脛脣脩脯脾腆腋腑腓腟腥腦腮腱腴膀
                   膂膃膈膊膓膕膠膣膤膩膰膵膸膺膽膾臀臂臈臉臍臑臘臙臚臟臠臧臺臻臾舁舂舅與舉舊舍舐舒
                   舖舩舫舮舳舸艀艘艙艚艝艟艢艤艨艪艫艱艷艸艾芍芒芟芫芬芻苒苙苜苞苟苡苣苳苴苹苺苻范
                   茆茉茖茗茘茣茫茯茱茲茴茵茹荀荅荐荳荵荼莅莇莉莊莎莓莖莚莟莠莢莨莪莵莽菁菎菘菠菫菲
                   菴菷菻菽萃萇萋萍萓萠萢萪萬萵萸萼葆葢葩葫葭葮葯葷葹蒂蒄蒟蒡蒭蒹蒻蒿蓁蓆蓊蓍蓐蓖蓙
                   蓚蓴蓼蓿蔆蔔蔕蔗蔘蔟蔡蔬蕀蕁蕈蕋蕕蕘蕚蕣蕭蕷蕾薀薇薈薊薐薑薔薛薜薤薨薹薺藉藏藐藕
                   藜藝藥藪藹藺藾蘂蘆蘊蘋蘓蘖蘗蘚蘢蘯蘰蘿虍虔處號虧虱蚋蚌蚓蚣蚩蚪蚫蚯蚰蚶蛄蛆蛉蛔蛛
                   蛞蛟蛩蛬蛯蛹蛻蜀蜃蜆蜈蜉蜊蜍蜑蜒蜚蜥蜩蜴蜷蜻蜿蝌蝎蝓蝗蝙蝟蝠蝣蝨蝪蝮蝴蝸螂螟螢螫
                   螯螳螻螽蟀蟄蟆蟇蟋蟐蟒蟠蟯蟲蟶蟷蟾蠅蠍蠎蠏蠑蠕蠖蠡蠢蠣蠧蠱蠶蠹蠻衂衄衍衒衙衞衢衫
                   衲衵衽衾袁袂袍袒袗袙袞袢袤袮袰袱袵袿裃裄裔裘裙裝裨裲裴裹裼褂褄褊褌褓褝褞褥褪褫褶
                   褸褻襁襃襄襌襍襞襠襤襦襪襭襯襴襷襾覃覈覊覓覘覡覦覩覬覯覲覺覽覿觀觚觜觝觧觴觸訃訌
                   訐訖訛訝訥訶詁詆詈詒詛詢詬詭詼誂誄誅誑誚誡誣誥誦誨諂諄諍諚諛諞諠諡諢諤諧諫諱諳諷
                   謇謌謐謔謖謗謚謠謦謨謫謳謾譁證譌譎譏譖譚譛譟譫譬譯譱譴譽讀變讌讎讒讓讖讙讚谺谿豁
                   豈豌豎豐豕豢豫豬豸豺豼貂貅貉貊貍貎貔貘貪貭貮貲貳貶貽賁賈賍賚賣賤賺賻賽贄贅贇贊贍
                   贏贐贓贔贖赧赭赱赳趁趙趺趾跂跋跌跏跖跚跛跟跣跪跫跼跿踈踉踐踝踞踟踪踰踴踵蹂蹇蹈蹉
                   蹊蹌蹐蹕蹙蹠蹣蹤蹲蹶蹼躁躄躅躇躊躋躑躓躔躙躡躪躬躰躱躾軅軆軈軋軛軣軫軻軼軾輅輊輌
                   輒輓輕輙輛輜輟輦輳輹輻輾轂轅轆轉轌轎轗轜轢轣轤辜辟辣辧辨辭辮辯辷迚迢迥迪迯迴迸迹
                   迺逅逋逍逎逑逕逖逞逡逧逵逶逹逾遉遏遐遑遒遖遘遙遞遨遯遲遶遽邀邁邂邃邇邉邊邏邨邯邱
                   邵郛郢郤鄂鄒鄙鄰鄲酊酖酘酣酥酩酲酳醂醉醋醢醪醫醯醴醵醺釀釁釉釋釐釖釛釟釡釵釶釼釿
                   鈑鈔鈕鈞鈩鈬鈿鉅鉈鉉鉋鉐鉗鉚鉞鉤銓銕銖銛銜銷銹鋏鋩鋺錏錙錚錢錣錮錵錺錻鍄鍖鍜鍠鍮
                   鍼鎔鎬鎭鎰鎹鏃鏈鏐鏖鏗鏘鏝鏤鏥鏨鐃鐇鐐鐓鐔鐚鐡鐫鐵鐶鐺鑁鑄鑒鑚鑛鑞鑠鑢鑪鑰鑵鑷鑼
                   鑽鑾鑿钁閂閇閊閔閖閘閙閠閧閨閭閹閻閼閾闃闊闌闍闔闕闖關闡闢闥阡阨阮阯陂陋陌陏陜陝
                   陞陟陦陬陲陷隋隍隕隗隘隧隨險隰隱隲隴隶隸隹雉雋雍雎雕雖雙雜雹霄霆霈霍霎霏霑霓霖霙
                   霤霪霰霸霹霽霾靂靄靆靈靉靜靠靡靤靦靨靫靱靹靺靼鞁鞅鞆鞋鞏鞐鞜鞣鞦鞨鞫鞳鞴韃韆韈韋
                   韜韭韲韵韶頌頏頡頤頷頸頽顆顋顏顫顯顰顱顳顴颪颯颱颶飃飄飆飜飩飫飭飮餃餉餒餔餘餝餞
                   餠餡餤餬餮餽餾饂饅饉饋饌饐饑饒饕馗馘馥馭馮馼駑駘駛駝駟駢駭駮駱駲駸駻騁騅騏騙騫騷
                   騾驀驂驃驅驍驕驗驛驟驢驤驥驩驪驫骭骰骼髀髏髑髓體髞髟髢髣髦髫髮髯髱髴髷髻鬆鬘鬚鬟
                   鬢鬣鬥鬧鬨鬩鬪鬮鬯鬱鬲鬻魃魄魍魎魏魑魘魴鮃鮑鮓鮖鮗鮟鮠鮨鮴鮹鯀鯆鯊鯏鯑鯒鯔鯡鯢鯣
                   鯤鯰鯱鯲鰄鰆鰈鰉鰊鰌鰒鰓鰔鰕鰛鰡鰤鰥鰮鰰鰲鰺鰾鱆鱇鱚鱠鱧鱶鱸鳧鳫鳬鳰鴃鴆鴈鴉鴒鴕
                   鴟鴣鴦鴪鴾鴿鵁鵄鵆鵈鵐鵑鵙鵝鵞鵤鵯鵲鵺鶇鶉鶚鶤鶩鶫鶯鶲鶸鶺鶻鷁鷂鷄鷆鷏鷓鷙鷦鷭鷯
                   鷸鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麑麒麕麝麥麩麪麭麸麼麾黌黎黏黐黔默黜黝點黠黥黨黯黴黶黷黹
                   黻黼黽鼇鼈鼕鼡鼬鼾齊齋齎齏齒齔齟齠齡齣齦齧齪齬齲齶齷龕龜龝龠"""

# 日本語の第三水準の漢字を宣言する.
DAISAN_SUIJYUN = """㐂㒵㓛㞍㟢㬢㮶㯃㰏㸿㽲䉤䑓䑛䖝䗪䡄䦰䰗丨丯丰亍仡份仿伃伋佈佉佖佟你佪佬佾侊侔侗俉
                    俠俱倁倂倎倘倧倮倻偀偁傔僌僐僦僲儃儆儋儞儵兊兕兗冝凃凊凞凢凮刁刓刕剉剗剝剡劓勈勌
                    勐勖勛勰勻匀匇匜卡卣卽厓厝厲吒吞吧呍呫呴呿咈咖咜咡咩哆哿唎唫唵啐啞喁喆喎喭嗎嘈嘎
                    嘻噉噓噦噯噱噲噶嚙嚞嚩嚬嚳囉囊圊圡圯圳圴坰坷坼垜垸埇埈埏埤埭埵埶埿堉塡塤塼墉增墩
                    壎壒壔壚壠壩夌奝奭妋妒妤姃姒姝姸娓娣婧婭婷婾媄媞媧嫄嬙嬥孁孖孽宓寘寬尒尞尣尫屛屢
                    屺岏岟岣岪岺峋峐峒峴崍崧嵆嵇嵊嵓嵭嶁嶠嶤嶧嶸巋巢帔帘幘幞幷庾廋廹开异弇弝弣弴弶弽
                    彀彅彔彘彤彧彽徉徜徧徯徵德忉忞忡忩怍怔怘怳怵恇悝悞惋惔惕惝惸愜愫愰愷憍憹憼戢戾扃
                    扖扚扯抅拄拖拼挊挘挹捃捥捼揥揭揵搐搔搢摑摠摭摹撾撿擄擊擎擐擷擻攢攩敧斝昀昉昕昞昢
                    昤昫昰昱昳昺晈晌晙晚晡晥晳晷晸暍暠暲暻曆曈曛曨曺曻朓朳杇杈杦杻极枓枘枛枻柀柗柹柼
                    栁栝栬栱桒桛桲桵梣梥梲棈棐棨棭棰棱棼椊椵楂楉楗楣楤楨榀榥榭槏槢槩槪槵槶樏樕樻樾橅
                    橐橖橛橫橳檉檔檝檞檥櫤櫧欛欞欬欵歆歖歠步歧歷殂殩殭每毖毗毿氅氐氳汙汜汴汶沅沆沘沜
                    沪泆泔泠泫泮泻洄洎洮洱洹洿浘浥涂涇涉涔涪涬涿淄淖淚淛淝淼渴湄湜湞溫溱滁滇滎漐漚漪
                    漯漳潑潙潞潡潢潾澈澌澍澔澠澧澶澼濇濊濰濵濹瀅瀆瀨灊灎灝灞灤灵炅炤炫炷烔烘烤焏焞焠
                    焫焮焰煆煇煑煒煜煠煨熅熇熒熺燁燄燾爀爕牕牖犍犛犾狀狻猧猨獐獦獼玕玟玠玢玦玫珉珏珖
                    珙珣珩琇琊琚琛琦琨琪琫琬琮琯琰瑄瑆瑇瑋瑗瑢瑫瑭璆璇璉璐璘璜璟璣璦璨璩璵璿瓈瓉瓚瓿
                    甁甗甯畯畹疒痎痤瘀瘂瘈瘕瘖瘙瘞瘦瘭瘵癃癋癤癥癭癯癱皁皛皝皞皦皪皶盅盌盎盔盦盱盼眊
                    眙眴眶睆睍睎睜睟睢睺瞀瞔瞪矠砭硃硎硏硑硨确碭碰磤磲磷礀礜礮礱礴祅祆祜祹禘禱禸秈秊
                    秔秞秫秭稃稹穝穭窅窠窳窻竎竫竽笒笭笻筇筎筠筭筯筲箞篗篙簁簞簠簱簳簶籙籭籹粏粔粠粼
                    糕糙糝紇紈紓紝紣紱絁絈絓絜絺綃綋綠綦緂緌緖緣縈縑縕縨繇繒繡繫纊纍罇羑羗羿翎翛翟翬
                    翮翺耔耦耵耷耼胊胗胠胳脘腊腠腧腨腭膻臊臏臗艠艴芎芡芣芤芩芮芷芾芿苆苕苽苾茀茁茢茭
                    茺荃荇荑荕荢荽莆莒莘莧莩莿菀菇菏菑菡菪萁萆萊葈葟葰葳蒅蒞蒯蒴蒺蓀蓂蔞蔣蔯蔲蕙蕤蕺
                    薌薏薢薭薰藋藎藭藿蘄蘅蘐蘒蘘蘩蘸虁虗虛虢虬虵蚘蚸蛺蛼蛽蜋蝱螇螈螬螭螵蟖蟬蠆蠊蠐蠔
                    蠟袘袪裊裎裵褘褙褚褜褧褰褲褹襀覔觔觥觶訒訕訢訷詇詎詝詡詵詹誧諐諟諴諶譆譔譙譩讝豉
                    豨賡賴賸賾贒贛趯跎跑跗踠踣踽蹰蹻軀軺輞輭輶轔辦辵迤迨迮逈逭邈邕邗邙邛邢邳邾郄郅郇
                    郗郝郞郯郴鄔鄕鄖鄢鄣鄧鄯鄱鄴鄽酈酛醃醞醬醱醼釗釤釥釭釱釻鈇鈐鈸鈹鈺鈼鉀鉃鉏鉸銈鋂
                    鋋鋌鋓鋠鋿錄錟錡錥鍈鍉鍊鍤鍥鍪鍰鎛鎣鎺鏆鏞鏟鏽鐄鐳鑊鑣鑫鑱鑲閎閟閦閩閬閶閽闋闐闓
                    闚闞陘隄隝隤隥雒雞雩雯霳霻靍靎靏靚靮靳鞕鞮鞺韁韉韛韞韴頊頞頫頰顒顓顖顗顙顚顥顬颺
                    飈飧饘馞騂騃騤騭騮騸驊驎驒骶髁髃髎髖髹鬂鬈鬠鬭魞魦魲魵魹鮄鮊鮏鮞鮧鯁鯎鯥鯸鯽鰀鰣
                    鱁鱏鱐鱓鱣鱥鱷鴝鴞鵃鵇鵒鵣鵰鵼鶊鶖鶬鶼鷀鷗鷧鸇鸕鹼麞麤麬麯麴麵黃黑鼐鼹齗龐龔龗龢
                    欄廊朗虜殺類隆﨏塚﨑﨔凞猪神祥福﨟諸都侮僧免勉勤卑喝嘆器塀墨層屮悔慨憎懲敏既暑梅
                    海渚漢煮琢碑社祉祈祐祖祝禍禎穀突節練繁署者臭著褐視謁謹賓贈逸難響頻𠀋𠮟𡈽𡌛𡑮𡚴𡢽
                    𡸴𣇄𣗄𣜿𣝣𣳾𤟱𥒎𥔎𥝱𥧄𥶡𦫿𦹀𧃴𧚄𨉷𨏍𪆐"""

# 日本語の第四水準の漢字を宣言する.
DAIYON_SUIJYUN = """㐆㐬㐮㑨㑪㒒㒼㓁㓇㔟㕝㕞㕣㕮㖦㖨㗅㗚㗴㘅㙊㚑㚖㚙㛏㝡㝢㝫㝬㝵㟁㟨㟴㟽㠀㠯㠶㡀㡜㡡
                    㣺㤗㤚㥯㩮㩳㫖㫗㫪㬎㬚㬜㭭㭷㮇㮈㮍㮤㯍㯰㰦㳃㳒㴑㴞㵤㶚㷀㷔㸅㹠㹦㹨㺃㺔㽗㽵㽷㾮㿉
                    㿗䀹䁘䂓䄅䅈䅏䅣䆴䆿䇦䇮䇳䈇䈎䋆䋖䋝䌂䌫䍃䏮䏰䐈䐗䐜䐢䑶䑺䒑䒳䒾䓔䔈䔍䔥䕃䖸䗥䘏
                    䙁䙥䚡䚯䜌䝤䟽䠖䡎䢵䧧䧺䨄䨩䪼䬻䯂䯊䯒䯨䰠䳄䳑䴇䵷丂丏丒丩丫丬丮乀乇么乑乚乩亝亹
                    亻亼仃仈仐仚仫仱仵伀伖伷伾佔佘佤佷佸佺佽侂侅侒侚侲侾俅俋俏俒俦俲倀倐倓倜倞倢偂偆
                    偎偓偗偣偦偪偰傈傒傓傕傖傜傣傪傱傺傻僄僇僎僔僙僡僩僳儈儗儛兠关养冃冋冘冣冭冼凳凴
                    刂划刖剕剜剬剷劂劄劘劤劦劯劺劻勊勑勷匊匋匤匵匾卂卧卬卺厤厴厷叀叕叚叴叵吤吨呃呕呢
                    呦呬咊咍咕咠咦咭咮咷咺咿哃哬哯哱哳唀唁唉唼啁啇啊啠啡啤啽喂喈喑喿嗉嗌嗑嗒嗝嗢嗩嘇
                    嘐嘨嘰嘷嘽嘿噀噇噞噠噭嚈嚌嚕嚚嚝嚨嚭嚲囅囍囟囨囶囷圕圣圩坅坆坌坍坨坯坳坴坵坻垚垝
                    垞垨垬埌埗埞埦埰埸埻埽堄堞堠堧堲堹塉塌塧墊墋墍墏墐墔墝墪墱壃壍壢壳壴夅夆夋复夔夤
                    夽奆奛奟奵奶奼妟妮妼姈姍姞姣姤姧姮娌娍娗娧娭婕婥婺媋媜媟媠媢媱媳媵媺媿嫚嫜嫠嫥嫮
                    嫰嫵嬀嬈嬗嬭嬴孌孒孨孯孼孿宁宄宖宬寀寎寖寱寽尃尩尰屟屣屧屨屩屰屼岈岊岠岢岦岧岭岵
                    峉崆崐崝崠崤崦崫崱崹嵂嵡嵪嵰嶈嶒嶔嶗嶙嶰嶲嶴嶹巑巗巘巠巤巩帀帒帕帟帮帾幉幖幫幬幭
                    幮庥庪庬庹庿廆廒廙廽弈弎弜弞彇彣彲彾徏徢徤徸忄忇忋忒忓忔忢忮忯忳忼怗怢怤恌恿悊悕
                    您悰悱悾惈惙惛惮惲惵愐愒愓愙愞愺慁慆慠慼憒憓憗憘憥憨憭懕懝懟懵戕戣戩扆扌扑扒扡扤
                    扭扳扻抙抦拕拽挃挍挐挲挵挻挼捁捄捎捙捬掄掔掙掽揔揕揜揠揫揬揲揷搉搞搥搩搯摚摛摝摳
                    摽撇撑撝撟擋擌擕擗擤擥擿攄攏攔攖攞攲敄敔敫敺斁斄斅斊斲斵斸斿旂旉旔旲旹旼昄昈昡昪
                    晅晎晑晗晛晣晪晫晬晭晻暀暐暒暙暭暱暵暿曬朁朅朒朙杌杍杔杝杴杶枒枰枲柃柈柒柙柛柰柷
                    栐栘栟栭栳栻栾桄桅桉桌桕桗桫桮桺桼梂梐梖梘梙梚梜梪梫梴梻棃棅棌棏棖棙棤棥棬棷棻椃
                    椇椻楆楩楬楲楺楿榒榖榘榦榰榷榺榼槀槑槖槣槮槯槳槴槾樑樚樝樰樲樳樴樿橆橉橎橒橤橺橾
                    檃檋檑檟檡檫檽櫆櫐櫔櫜櫝櫬櫱櫲櫳櫽欋欏欐欑欗欯歊歘歬歵歺殁殛殮殽殾毇毈毉毚毦毧毮
                    毱氂氊氎氵氶氺氿汍汛汧汭沄沉沔沕沗沭泂泐泖泚泜泩泬泭洀洊洤洦洧洯洴洼浛浞浠浰涀涁
                    涊涍涑涘涫涮涴淂淈淎淏淐淟淩淶渗渞渢渧渲渶渼湈湉湋湌湏湑湓湔湗湣溓溧溴溿滃滊滙滫
                    滹滻漊漌漘漥漵漶漼潒潗潚潠潨潽澐澖澘澟澥澯澵澾濈濉濚濞濩濼瀀瀇瀊瀣瀹瀺瀼灃灇灋灔
                    灥灩灬灮灶灾炁炆炕炗炟炱炻烊烑烓烜烬焃焄焆焇焈焌焯焱煊煐煓煞熀熖熛熠熢熮熯熳燋燓
                    燙燜爇爫爴爸爹牂牓牗牣牮牯牸牿犎犭犮犰犱狁狌狳狺猇猒猘猙猬猱猳猹猽獒獫獬獮獯獱獷
                    玁玅玊玔玘玜玞玥玨玵玷玹玼玿珅珋珡珧珹珺琁琓琤琱琹瑀瑃瑍瑒瑓瑝瑱璁璅璈璒璗璙璠璡
                    璥璪璫璹璺璻瓖瓘瓞瓫瓯瓺甠甤甪甽甾畀畈畎畐畒畬畱畲畺畽畾疁疌疢疰疷疿痀痆痏痓痝痟
                    痠痧痬痮痱痹瘃瘇瘏瘓瘘瘛瘜瘥瘨瘳瘼癁癉癕癮皕皜皠皡皧皨皯盉盨盬眗眚眭眵睘睠睪睲睼
                    睽瞚瞟瞢瞤瞩矞矟矤矦矪矬矰矴矻砅砆砉砍砙砡砬硇硤硪碊碔碝碞碟碤碻磈磌磎磕磠磡磦磹
                    磺磻磾礐礛礥礰礻祊祘祛祧祲禔禕禖禛禡禩禴离秂秇秌种秖稊稑稕稛稞稭稸穇穌穖穙穜穟穠
                    穧穪穵穸窂窊窐窣窬窹窼窾竌竑竧竨竴笇笧笪笮笯笱笽筁筕筤筦筩筳筹筿箐箑箛箯箵箼篅篊
                    篔篖篚篪篰簃簋簎簏簦籅籊籑籗籞籡籩籮籯籰粦粶粷粿糄糈糍糗糦糫糵紃紉紒紞紽紾絀絇絙
                    絚絪絰絿綆綈綌綗綝綧綪綶綷緀緗緙緦緱緹縐縗縝縠縧縬繅繳繵繾纆纇纑纘纚缻缼缾罃罄罏
                    罒罡罣罤罭罽罾羐羖羜羭翃翏翣翥翯翲耂耈耊耎耑耖耤耬耰聃聦聱聵聻肙肜肤肧肸胅胕胘胦
                    胵胻脍脖脞脤脧脬脵脽腩膁膄膅膘膲臁臃臖臛臤臬臽臿舄舙舡舢舲舴舼艅艆艉艋艏艗艜艣艹
                    艽艿芃芊芓芧芨芲芴芺芼苢苨苷茇茈茌茛茝茰茼荄荔荗荣荿莍莔莕莛莝菉菐菔菝菥菹萏萑萕
                    萗萹葊葏葑葒葙葚葜葥葶葸葼蒁蒗蒦蒾蓎蓏蓓蓜蓧蓪蓯蓰蓱蓺蓽蔌蔛蔤蔥蔫蔴蔾蕏蕑蕓蕞蕡
                    蕢蕯蕻蕽蕿薁薆薓薝薟薷薼藇藊藘藙藟藡藦藶蘀蘑蘞蘡蘤蘧蘹蘼虀虓虖虯虷虺蚇蚉蚍蚑蚜蚝
                    蚨蚱蚳蛁蛃蛑蛕蛗蛣蛦蜅蜇蜎蜐蜓蜙蜟蜡蜣蜱蜺蜾蝀蝃蝑蝘蝤蝥蝲蝼螉螋螓螠螧螾蟁蟎蟟蟣
                    蟥蟦蟪蟫蟭蟵蠁蠃蠋蠓蠨蠮蠲蠼衊衘衟衤衩衯袠袼袽袾裀裑裒裓裛裰裱褁褷襂襅襉襢覀覉覐
                    覟覰覷觖觘觫觱觳觽觿訑訔訡訵訾詅詍詘誐誮誷誾諗諼謅謊謍謜謟謭譃譑譞譶譿讁讋讔讕讜
                    讞谹谽豅豇豏豔豗豩豭豳貒貓貙貛貤賕賖賙賰賱贉贎赬趄趕趦跆跈跙跬跽踆踌踔踖踡踢踧踶
                    踹蹋蹔蹢蹬蹭蹯躘躞躮躳躵躶躻軑軔軹輀輈輗輫轀轊轘辤辴辶迁迆迊迍迓迕迠迱迵迻适逌逷
                    遃遄遝邅邌邐邡邰邶郃郈郜郟郫郲郶郾郿鄀鄄鄆鄘鄜鄞鄷鄹鄺酆酇酗酙酡酤酴酹醅醎醨醮醳
                    醶釃釄釚釬釮鈁鈊鈖鈗鈳鉂鉇鉊鉎鉑鉖鉙鉠鉡鉥鉧鉨鉼鉽鉿銉銍銗銙銟銧銫銲銿鋀鋆鋎鋐鋗
                    鋙鋥鋧鋷鋹鋻錂錍錑錕錝錞錧錩鍇鍑鍗鍚鍫鍱鍳鎈鎋鎏鎞鎡鏁鏇鏜鏢鏧鏱鏵鏻鐉鐏鐖鐗鐲鐴
                    鐻鑅鑭鑯镸镹閆閌閍閫閴闈阝阬阳阴阼陁陡隂隚隩隯隳隺隽雘雚雝霔霣霶靁靇靕靗靛靪鞖鞚
                    鞞鞢鞱鞲鞾韌韑韔韘韙韡韱頄頍頎頔頖頣頥頲頳顇顦颫颭颰颷颸颻颼颿飂飇飋飠飡飣飥飪飰
                    飱飳餈餖餗餚餛餜餱餲餳餺餻餼饀饁饆饍饎饜饟饠馣馦馹馽馿駃駉駔駙駞駰駹駼騊騑騖騚騠
                    騱騶驄驌驘骯骷骹髆髐髒髕髜髠髥髩鬃鬌鬐鬒鬖鬜鬫鬳鬽魋魣魥魫魬魳魶魷鮦鮬鮱鮲鮸鮾鯇
                    鯘鯝鯧鯪鯫鯮鯯鯳鯷鯺鰖鰘鰙鰚鰝鰢鰧鰩鰪鰱鰶鰷鱅鱉鱊鱔鱘鱛鱜鱝鱟鱩鱪鱫鱭鱮鱰鱲鱵鱺
                    鳦鳲鴂鴋鴑鴗鴘鴲鵂鵊鵟鵢鵩鵫鵳鵶鵷鵾鶄鶍鶙鶡鶵鶹鶽鶿鷃鷇鷉鷖鷚鷟鷠鷣鷴鸂鸊鸍鸙鸜
                    鸝鹻麀麅麛麨麽黟黧黮黿鼂鼃鼗鼙鼯鼷鼺鼽齁齅齆齓齕齘齝齩齭齰齵﨓蘒﨡﨤爫縉艹艹辶𠂉
                    𠂢𠂤𠆢𠈓𠌫𠍱𠎁𠏹𠑊𠔉𠗖𠘨𠝏𠠇𠠺𠢹𠥼𠦝𠫓𠬝𠵅𠷡𠹤𠹭𠺕𠽟𡈁𡉕𡉴𡉻𡋗𡋤𡋽𡌶𡍄𡏄𡑭𡗗𡙇𡜆
                    𡝂𡧃𡱖𡴭𡵅𡵢𡵸𡶒𡶜𡶡𡶷𡷠𡸳𡼞𡽶𡿺𢅻𢈘𢌞𢎭𢛳𢡛𢢫𢦏𢪸𢭆𢭏𢭐𢮦𢰝𢰤𢷡𣆶𣇃𣇵𣍲𣏐𣏒𣏓𣏕
                    𣏚𣏟𣏤𣑊𣑋𣑑𣑥𣓤𣕚𣖔𣘸𣘹𣘺𣙇𣜌𣜜𣝤𣟧𣟿𣠤𣠽𣪘𣱿𣴀𣴎𣵀𣷓𣷹𣷺𣽾𤂖𤄃𤇆𤇾𤎼𤘩𤚥𤢖𤩍𤭖
                    𤭯𤰖𤴔𤸎𤸷𤹪𤺋𥁊𥁕𥄢𥆩𥇍𥇥𥈞𥉌𥐮𥓙𥖧𥞩𥞴𥧔𥫣𥫤𥫱𥮲𥱋𥱤𥸮𥹖𥹢𥹥𥻂𥻘𥻨𥼣𥽜𥿔𥿠𥿻𦀌
                    𦀗𦁠𦃭𦉰𦊆𦍌𦐂𦙾𦚰𦜝𦣝𦣪𦥑𦥯𦧝𦨞𦩘𦪌𦪷𦰩𦱳𦳝𦹥𦾔𦿶𦿷𦿸𧄍𧄹𧏚𧏛𧏾𧐐𧑉𧘔𧘕𧘱𧚓𧜎𧜣
                    𧝒𧦅𧪄𧮳𧮾𧯇𧲸𧶠𧸐𧾷𨂊𨂻𨊂𨋳𨐌𨑕𨕫𨗈𨗉𨛗𨛺𨥆𨥉𨥫𨦇𨦈𨦺𨦻𨨞𨨩𨩃𨩱𨪙𨫍𨫝𨫤𨯁𨯯𨴐𨵱
                    𨷻𨸟𨸶𨺉𨻫𨼲𨿸𩊠𩊱𩒐𩗏𩙿𩛰𩜙𩝐𩣆𩩲𩷛𩸕𩸽𩹉𩺊𩻄𩻛𩻩𩿎𪀚𪀯𪂂𪃹𪎌𪐷𪗱𪘂𪘚𪚲"""


# 対象の文字列が英語(=ASCII)の小文字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_alphabetic_Lowercase_in_en(txt):
    cmpl = re.compile('^[a-z]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が英語(=ASCII)の大文字のみによって構成されているかを判定する. 
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_alphabetic_uppercase_in_en(txt):
    cmpl = re.compile('^[A-Z]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が英語(=ASCII)の数字のみによって構成されているかを判定する. 
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_numeric_in_en(txt):
    cmpl = re.compile('^[0-9]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が英語(=ASCII)の文字と数字によって構成されているかを判定する. 
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_alphabetic_and_numeric_in_en(txt):
    cmpl = re.compile('^[a-z|0-9]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が英語(=ASCII)の記号のみによって構成されているかを判定する. 
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_symbol_in_en(txt):
    cmpl = re.compile('^[ -~]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が英語(=ASCII)の記号のみによって構成されているかを判定する. 
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_symbol_without_space_in_en(txt):
    cmpl = re.compile('^[!-~]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が英語(=ASCII)の文字と数字と記号によって構成されているかを判定する. 
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_alphabetic_numeric_and_symbol_with_space_in_en(txt):
    cmpl = re.compile('^[a-z|0-9| -~]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が英語(=ASCII)の文字と数字と記号によって構成されているかを判定する. 
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_alphabetic_numeric_and_symbol_without_space_in_en(txt):
    cmpl = re.compile('^[a-z|0-9|!-~]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語のアルファベット小文字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_alphabetic_lowercase_in_ja(txt):
    cmpl = re.compile('^[ａ-ｚ]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語のアルファベット大文字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_alphabetic_uppercase_in_ja(txt):
    cmpl = re.compile('^[Ａ-Ｚ]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語の平仮名のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_hiragana_in_ja(txt):
    cmpl = regex.compile(r'\p{Block=Hiragana}+')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語の平仮名(拡張文字含む)のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_hiragana_extention_in_ja(txt):
    cmpl = regex.compile(r'\p{Script=Hiragana}+')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語の片仮名の大文字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_katakana_uppercase_in_ja(txt):
    cmpl = regex.compile(r'\p{Block=Katakana}+')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語の片仮名の大文字(拡張文字含む)のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_katakana_uppercase_extention_in_ja(txt):
    cmpl = regex.compile(r'\p{Script=Katakana}+')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語の片仮名の小文字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_katakana_lowercase_in_ja(txt):
    cmpl = re.compile('^[\uFF66-\uFF9F]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語の記号のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_hiragana_extention_in_ja(txt):
    cmpl = re.compile('^[\uFF01-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語の常用漢字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_jyouyou_kanji(txt):
    cmpl = re.compile('^[{JYOUYOU_KANJI}]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語の第一・第二水準の漢字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_jyouyou_kanji(txt):
    cmpl = re.compile('^[{DAIICHI_KANJI}{DAINI_KANJI}]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語の第三・第四水準の漢字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_jyouyou_kanji(txt):
    cmpl = re.compile('^[{DAISAN_KANJI}{DAIYON_KANJI}]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語の第一から第四水準までの漢字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_jyouyou_kanji(txt):
    cmpl = re.compile('^[{DAIICHI_KANJI}{DAINI_KANJI}{DAISAN_KANJI}{DAIYON_KANJI}]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語の漢数字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_kanji_numeric_in_ja(txt):
    cmpl = re.compile('^[〇一二三四五六七八九十百千万億兆]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列が日本語のローマ数字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_roman_numeric_in_ja(txt):
    cmpl = re.compile('^[\u2160-\u217F]+$')
    return cmpl.fullmatch(txt)


# 対象の文字列がCJKの漢字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_kanji_in_cjk(txt):
    cmpl = regex.compile(r'\p{Script=Han}+')
    return cmpl.fullmatch(txt)


# 対象の文字列がCJKの漢字(拡張文字含む)のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_kanji_extention_in_cjk(txt):
    cmpl = regex.compile(r'\p{Script_Extensions=Han}+')
    return cmpl.fullmatch(txt)


# 対象の文字列が絵文字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_emoji(txt):
    cmpl = regex.compile(r'\p{Emoji_Presentation=Yes}+')
    return cmpl.fullmatch(txt)


# 対象の文字列が顔文字のみによって構成されているかを判定する.
# 引数 : txt=元の文章
# 戻り値 : 判定の結果([True]=構成されている, [False]=構成されていない)
def check_kaomoji(txt):
    cmpl = re.compile('^[\U0001F600-\U0001F64F]+$')
    return cmpl.fullmatch(txt)


# 文字列が数字ドメインのURLであるかを判定する.
def check_url_in_number_domain(txt):
    pttrn1 = re.compile('(http:|https:)//[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}')
    pttrn2 = re.compile('(http:|https:)//[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}:[0-9]{1,5}')
    addr_num_prt1 = int(txt.split("//")[1].split(":")[0].split(".")[0])
    addr_num_prt2 = int(txt.split("//")[1].split(":")[0].split(".")[1])
    addr_num_prt3 = int(txt.split("//")[1].split(":")[0].split(".")[2])
    addr_num_prt4 = int(txt.split("//")[1].split(":")[0].split(".")[3])
    port_num = int(txt.split("//")[1].split(":")[1])

    if re.fullmatch(pttrn1, txt):
        if (((addr_num_prt1 >= 0) and (addr_num_prt1 <= 255)) and
            ((addr_num_prt2 >= 0) and (addr_num_prt2 <= 255)) and
            ((addr_num_prt3 >= 0) and (addr_num_prt3 <= 255)) and
            ((addr_num_prt4 >= 0) and (addr_num_prt4 <= 255))):
            return True
        return False

    if re.fullmatch(pttrn2, txt):
        if (((addr_num_prt1 >= 0) and (addr_num_prt1 <= 255)) and
            ((addr_num_prt2 >= 0) and (addr_num_prt2 <= 255)) and
            ((addr_num_prt3 >= 0) and (addr_num_prt3 <= 255)) and
            ((addr_num_prt4 >= 0) and (addr_num_prt4 <= 255))):
            if ((port_num >= 0) and (port_num <= 65535)):
                return True
            return False
        return False
    return False


# 文字が英語のものかを判定する.
def check_pure_english_charcter(char):
    # 英語の文字範囲を定義する. 
    char_rngs = [
        (r'\u0041', r'\u005A'), # 英大文字
        (r'\u0061', r'\u007A')  # 英小文字
        # (r'\u0021', r'\u007E')   # 英数字 & 英記号
    ]
    
    for trgt_strt, trgt_end in char_rngs:
        if re.match(f'[{trgt_strt}-{trgt_end}]', char):
            return True
    return False


# 文字が日本語のものかを判定する.
def check_pure_japanese_charcter(char):
    # 日本語の文字範囲を定義する.
    char_rngs = [
        (r'\u3040', r'\u309F'), # ひらがな
        (r'\u30A0', r'\u30FF'), # カタカナ
        (r'\u4E00', r'\u9FFF'), # 漢字
        (r'\uFF66', r'\uFF9F'), # 半角カタカナ
        (r'\u31F0', r'\u31FF'), # カタカナ拡張
        (r'\uFF10', r'\uFF19'), # 全角数字
        (r'\uFF21', r'\uFF3A'), # 全角英大文字
        (r'\uFF41', r'\uFF5A'), # 全角英小文字
        (r'\uFF01', r'\uFF5E')  # 全角記号
    ]

    for trgt_strt, trgt_end in char_rngs:
        if re.match(f'[{trgt_strt}-{trgt_end}]', char):
            return True
    return False


# 文字が読点かを判定する.
def check_comma_character(char):
    if (re.match(r'\u002C', char) or
        re.match(r'\u3001', char)):
        return True
    return False


# 文字が句点かを判定する.
def check_period_character(char):
    if (re.match(r'\u002E', char) or
        re.match(r'\u3002', char)):
        return True
    return False


# 文字が開き括弧かを判定する.
def check_open_bracket_charcter(char):
    # 開き括弧の文字範囲を定義する.
    char_set = [
        (r'\u0028'), # 半角丸括弧
        (r'\u005B'), # 半角角括弧
        (r'\u007B'), # 半角波括弧
        (r'\uFF08'), # 全角丸括弧
        (r'\u3008'), # 全角尖括弧
        (r'\u300A'), # 全角二重尖括弧
        (r'\u300C'), # 全角二重角括弧
        (r'\u300E'), # 全角白二重角括弧
        (r'\u3010')  # 全角黒角括弧
    ]

    for char_elm in char_set:
        if re.match(f'{char_elm}', char):
            return True
    return False


# 文字が閉じ括弧かを判定する.
def check_close_bracket_charcter(char):
    # 閉じ括弧の文字範囲を定義する.
    char_set = [
        (r'\u0029'), # 半角丸括弧
        (r'\u005D'), # 半角角括弧
        (r'\u007D'), # 半角波括弧
        (r'\uFF09'), # 全角丸括弧
        (r'\u3009'), # 全角尖括弧
        (r'\u300B'), # 全角二重尖括弧
        (r'\u300D'), # 全角二重角括弧
        (r'\u300F'), # 全角白二重角括弧
        (r'\u3011')  # 全角黒角括弧
    ]

    for char_elm in char_set:
        if re.match(f'{char_elm}', char):
            return True
    return False


# 文字が改行かを判定する.
def check_eol_charcter(char):
    if (re.match(r'\r', char) or
        re.match(r'\n', char)):
        return True
    return False


# 文字が空白かを判定する.
def check_space_charcter(char):
    if (re.match(r'\u0020', char) or
        re.match(r'\u3000', char)):
        return True
    return False


# 文章の記述に用いられている言語を判別する.
def detect_language_and_whitespace(char):
    if check_pure_english_charcter(char):
        return "en"
    elif check_pure_japanese_charcter(char):
        return "ja"
    elif check_comma_character(char):
        return "comma"
    elif check_period_character(char):
        return "period"
    elif check_open_bracket_charcter(char):
        return "bracket-open"
    elif check_close_bracket_charcter(char):
        return "bracket-close"
    elif check_eol_charcter(char):
        return "eol"
    elif check_space_charcter(char):
        return "space"
    else:
        return "unknown"


# 文章をキャラクタ化してタグ付けする.
def characterize_and_tagging(txt):
    chars = []
    pttrn = r'.'

    mtchs = re.finditer(pttrn, txt)

    for mtch in mtchs:
        char = mtch.group(0)
        lng_n_ws = detect_language_and_whitespace(char)
        chars.append((char, lng_n_ws))

    return chars


# 文章をトークン化してタグ付けする.
def tokenize_and_tagging(chars):
    tkns_en = []
    tkns_ja = []
    tkns_trns_en = []
    tkns_trns_ja = []
    tkns_fnl_en = []
    tkns_fnl_ja = []
    chars_tmp = []
    cmma = []
    prd = []
    brckt_opn = []
    brckt_cls = []
    eol = []
    spc = []
    ukwn = []
    tkns_mrg = []
    txt_en = ""
    txt_ja = ""
    strg = ""
    flg_strt = False
    i = 0
    j = 0
    cnt = 0
    idx_en = 0
    idx_ja = 0
    lngt = 0
    slc_bgn = 0
    slc_end = 0

    while i < len(chars):
          if flg_strt == False:
              if chars[i][1] == "en":
                  txt_en += chars[i][0]
                  flg_strt = True
                  i += 1
                  continue

              elif chars[i][1] == "ja":
                  txt_ja += chars[i][0]
                  flg_strt = True
                  i += 1
                  continue

              else:
                  flg_strt = True
                  i += 1
                  continue

          else:
              if (chars[i-1][1] == "en" and chars[i][1] == "en"):
                  txt_en += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "en" and chars[i][1] == "ja"):
                  txt_ja += chars[i][0]
                  tkns_en.append(txt_en)
                  txt_en = ""
                  i += 1
                  continue

              elif (chars[i-1][1] == "en" and chars[i][1] == "eol"):
                  tkns_en.append(txt_en)
                  txt_en = ""
                  i += 1
                  continue

              elif (chars[i-1][1] == "en" and chars[i][1] == "space"):
                  tkns_en.append(txt_en)
                  txt_en = ""
                  i += 1
                  continue

              elif (chars[i-1][1] == "en" and chars[i][1] == "unknown"):
                  tkns_en.append(txt_en)
                  txt_en = ""
                  i += 1
                  continue

              elif (chars[i-1][1] == "ja" and chars[i][1] == "ja"):
                  txt_ja += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "ja" and chars[i][1] == "en"):
                  txt_en += chars[i][0]
                  tkns_ja.append(txt_ja)
                  txt_ja = ""
                  i += 1
                  continue

              elif (chars[i-1][1] == "ja" and chars[i][1] == "eol"):
                  tkns_ja.append(txt_ja)
                  txt_ja = ""
                  i += 1
                  continue

              elif (chars[i-1][1] == "ja" and chars[i][1] == "space"):
                  tkns_ja.append(txt_ja)
                  txt_ja = ""
                  i += 1
                  continue

              elif (chars[i-1][1] == "ja" and chars[i][1] == "unknown"):
                  tkns_ja.append(txt_ja)
                  txt_ja = ""
                  i += 1
                  continue

              elif (chars[i-1][1] == "comma" and chars[i][1] == "ja"):
                  txt_ja += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "comma" and chars[i][1] == "en"):
                  txt_en += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "period" and chars[i][1] == "ja"):
                  txt_ja += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "period" and chars[i][1] == "en"):
                  txt_en += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "bracket-open" and chars[i][1] == "ja"):
                  txt_ja += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "bracket-open" and chars[i][1] == "en"):
                  txt_en += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "bracket-close" and chars[i][1] == "ja"):
                  txt_ja += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "bracket-close" and chars[i][1] == "en"):
                  txt_en += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "eol" and chars[i][1] == "ja"):
                  txt_ja += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "eol" and chars[i][1] == "en"):
                  txt_en += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "space" and chars[i][1] == "ja"):
                  txt_ja += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "space" and chars[i][1] == "en"):
                  txt_en += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "unknown" and chars[i][1] == "ja"):
                  txt_ja += chars[i][0]
                  i += 1
                  continue

              elif (chars[i-1][1] == "unknown" and chars[i][1] == "en"):
                  txt_en += chars[i][0]
                  i += 1
                  continue

              else:
                  i += 1
                  continue

    if txt_en != "":
        tkns_en.append(txt_en)
    if txt_ja != "":
        tkns_ja.append(txt_ja)

    for tkn_en in tkns_en:
        tkns_trns_en = tkn_en # @@@@

        for tkn_trns_en in tkns_trns_en:
            tkns_fnl_en.append(tkn_trns_en)

    for tkn_ja in tkns_ja:
        tkns_trns_ja = tkn_ja # @@@@

        for tkn_trns_ja in tkns_trns_ja:
            tkns_fnl_ja.append(tkn_trns_ja)

    while j < len(chars):
          strg = ""
          cnt = 0

          if chars[j][1] == "en":
              if idx_en < len(tkns_fnl_en):
                  lngt = len(tkns_fnl_en[idx_en][0])
                  slc_bgn = j
                  slc_end = j + lngt
                  chars_tmp = chars[slc_bgn:slc_end]

                  while cnt < len(chars_tmp):
                        strg += chars_tmp[cnt][0]
                        cnt += 1

                  if strg == tkns_fnl_en[idx_en][0]:
                      tkns_mrg.append(tkns_fnl_en[idx_en])
                      idx_en += 1
                      j += lngt
                      continue
                  else:
                      j += 1
                      continue
              else:
                break

          elif chars[j][1] == "ja":
              if idx_ja < len(tkns_fnl_ja):
                  lngt = len(tkns_fnl_ja[idx_ja][0])
                  slc_end = j + lngt
                  slc_bgn = j
                  chars_tmp = chars[slc_bgn:slc_end]

                  while cnt < len(chars_tmp):
                        strg += chars_tmp[cnt][0]
                        cnt += 1

                  if strg == tkns_fnl_ja[idx_ja][0]:
                      tkns_mrg.append(tkns_fnl_ja[idx_ja])
                      idx_ja += 1
                      j += lngt
                  else:
                      j += 1
                      continue
              else:
                break

          elif chars[j][1] == "comma":
              cmma = [chars[j][0], "COMMA"]
              tkns_mrg.append(cmma)
              j += 1
              continue

          elif chars[j][1] == "period":
              prd = [chars[j][0], "PERIOD"]
              tkns_mrg.append(prd)
              j += 1
              continue

          elif chars[j][1] == "bracket-open":
              brckt_opn = [chars[j][0], "BRACKET-OPEN"]
              tkns_mrg.append(brckt_opn)
              j += 1
              continue

          elif chars[j][1] == "bracket-close":
              brckt_cls = [chars[j][0], "BRACKET-CLOSE"]
              tkns_mrg.append(brckt_cls)
              j += 1
              continue

          elif chars[j][1] == "eol":
              eol = ["--eol--", "EOL"]
              tkns_mrg.append(eol)
              j += 1
              continue

          elif chars[j][1] == "space":
              spc = [chars[j][0], "SPACE"]
              tkns_mrg.append(spc)
              j += 1
              continue

          else:
              ukwn = [chars[j][0], "UNKNOWN"]
              tkns_mrg.append(ukwn)
              j += 1
              continue


    return tkns_mrg


#テキストが指定の文字列で開始するかを判定する
def check_text_start_string(txt, pttrn_str):
    is_strt = txt.startswith(pttrn_str)

    return is_strt


#テキストが指定の文字列で終結するかを判定する(改行コードを終端とする)
def check_text_terminate_string(txt, pttrn_str):
    is_trmnt = txt.endswith(pttrn_str)

    return is_trmnt


# 文字の種類(=文字種)を取得するための関数を宣言・定義する.
def get_character_type(char):
    pttrn_kanji = r"[\u4E00-\u9FFF]"
    pttrn_hiragana = r"[\u3040-\u309F]"
    pttrn_katakana = r"[\u30A0-\u30FF]"
    pttrn_katakana_hankaku = r"[\uFF66-\uFF9F]"
    pttrn_katakana_kakutyou = r"[\u31F0-\u31FF]"
    pttrn_suuji_zenkaku = r"[\uFF10-\uFF19]"
    pttrn_alphabet_komoji_zenkaku = r"[\uFF21-\uFF3A]"
    pttrn_alphabet_oomoji_zenkaku = r"[\uFF41-\uFF5A]"

    if regex.match(pttrn_kanji, char):
        return "kanji"
    if regex.match(pttrn_hiragana, char):
        return "hiragana"
    elif regex.match(pttrn_katakana, char):
        return "katakana"
    elif regex.match(pttrn_katakana_hankaku, char):
        return "katakana-hankaku"
    elif regex.match(pttrn_katakana_kakutyou, char):
        return "katakana-kakutyou"
    elif regex.match(pttrn_suuji_zenkaku, char):
        return "suuji-zenkaku"
    elif regex.match(pttrn_alphabet_komoji_zenkaku, char):
        return "alphabet-komoji-zenkaku"
    elif regex.match(pttrn_alphabet_oomoji_zenkaku, char):
        return "alphabet-oomoji-zenkaku"
    else:
        return "others"


# テキストメッセージを改行コードなどの区切り文字を基準に分割するための関数を宣言・定義する.
def split_text_message_on_delimiter(txt_msg):
    spltd_ln_txts_tmp = re.split(r"[\r\n.。,、 \u3000]", txt_msg)
    spltd_ln_txts_fnl = [spltd_ln_txt_tmp for spltd_ln_txt_tmp in spltd_ln_txts_tmp if spltd_ln_txt_tmp]

    return spltd_ln_txts_fnl


# 行メッセージを文字種を基準に分割するための関数を宣言・定義する.
def split_text_message_character_type(txt_msg):
    spltd_typ_wrds_tmp = []
    spltd_typ_wrds_fnl = []
    crrnt_chnk = ""
    crrnt_typ = ""

    for char in txt_msg:
        char_typ = get_character_type(char)
        if char_typ == crrnt_typ:
            crrnt_chnk += char
            crrnt_typ = char_typ
            continue
        else:
            if crrnt_chnk == "":
               crrnt_chnk += char
               crrnt_typ = char_typ
               continue
            else:
               spltd_typ_wrds_tmp.append(crrnt_chnk)
               crrnt_chnk = char
               crrnt_typ = char_typ
               continue
    else:
        if crrnt_chnk:
            spltd_typ_wrds_tmp.append(crrnt_chnk)

    spltd_typ_wrds_fnl = [spltd_typ_wrd_tmp for spltd_typ_wrd_tmp in spltd_typ_wrds_tmp if spltd_typ_wrd_tmp]
    return spltd_typ_wrds_fnl


# 
def analyze_words_in_texts(stff_wrds_in_txts):
    pass


# 
def generate_words_in_texts(self, stff_fct, stff_intnt, stff_sntmnt):
    pass


# 返信メッセージを生成するためのメソッドを宣言・定義する.
# def asemble_text_message(app_wrds_in_txts):
def asemble_text_message():
    sntmnt_cnddt = ["JOY", "ANGER", "PITY", "COMFORT", "MIXED", "NEUTRAL"]
    dcid_sntmnt = random.choice(sntmnt_cnddt)

    if dcid_sntmnt == "JOY":
         msg_cnddt = ["お世話になってます♪", "またまた～♪"]
         gnrtd_msg = random.choice(msg_cnddt)

    elif dcid_sntmnt == "ANGER":
         msg_cnddt = ["それで？", "何が言いたいの？"]
         gnrtd_msg = random.choice(msg_cnddt)

    elif dcid_sntmnt == "PITY":
         msg_cnddt = ["ええと・・・", "・・・"]
         gnrtd_msg = random.choice(msg_cnddt)

    elif dcid_sntmnt == "COMFORT":
         msg_cnddt = ["くつろいでね", "元気でね"]
         gnrtd_msg = random.choice(msg_cnddt)

    elif dcid_sntmnt == "MIXED":
         msg_cnddt = ["どうしたらいいですか？", "オロオロ 汗"]
         gnrtd_msg = random.choice(msg_cnddt)

    else:
         msg_cnddt = ["どうしました？", "お元気そうで"]
         gnrtd_msg = random.choice(msg_cnddt)

    return gnrtd_msg